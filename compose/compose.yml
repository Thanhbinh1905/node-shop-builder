name: node-shop-builder

services:
  zookeeper:
    image: confluentinc/cp-zookeeper:7.6.0
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - "2181:2181"

  kafka:
    image: confluentinc/cp-kafka:7.6.0
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
      - "29092:29092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_INTERNAL:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://localhost:9092,PLAINTEXT_INTERNAL://kafka:29092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1

  kafka-topics-setup:
    image: confluentinc/cp-kafka:7.6.0
    depends_on:
      - kafka
    entrypoint: ["/bin/sh","-c"]
    command: |
      kafka-topics --bootstrap-server kafka:29092 --create --if-not-exists --topic product.variant.created --replication-factor 1 --partitions 3;
      kafka-topics --bootstrap-server kafka:29092 --create --if-not-exists --topic basket.checkedout --replication-factor 1 --partitions 3;
      kafka-topics --bootstrap-server kafka:29092 --create --if-not-exists --topic inventory.reserved --replication-factor 1 --partitions 3;
      kafka-topics --bootstrap-server kafka:29092 --create --if-not-exists --topic inventory.reserved.fail --replication-factor 1 --partitions 3;
      echo 'âœ… Kafka topics ensured';


  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    command: ["redis-server","--appendonly","yes"]
  userdb:
    container_name: userdb
    image: mongo
    restart: always
    ports:
      - 27017:27017
    volumes:
      - mongo_user:/data/db
    environment:
      - TZ=Asia/Ho_Chi_Minh

  catalogdb:
    image: postgres:17.6-alpine3.22
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=secret
      - POSTGRES_DB=catalog
    ports:
      - "5432:5432"
    volumes:
      - catalogdb_db:/var/lib/postgresql/data
      
  inventorydb:
    image: postgres:17.6-alpine3.22
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=secret
      - POSTGRES_DB=inventory
    ports:
      - "5433:5432"
    volumes:
      - inventory_db:/var/lib/postgresql/data
  basketdb:
    image: postgres:17.6-alpine3.22
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=secret
      - POSTGRES_DB=basket
    ports:
      - "5434:5432"
    volumes:
      - basket_db:/var/lib/postgresql/data
volumes:
  catalogdb_db:
  inventory_db:
  mongo_user:
  basket_db: